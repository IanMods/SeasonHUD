plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom'
    id 'net.darkhax.curseforgegradle' version '1.1.16'
    id "com.modrinth.minotaur" version "2.+"
}

version = mod_version
group = mod_group

base {
    archivesName = mod_id + "-fabric-" + minecraft_version
}

repositories {
    maven {
        name = "CurseMaven"
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        name = 'Sponge / Mixin'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }

    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }

    maven {
        name = "JourneyMap (Public)"
        url = "https://jm.gserv.me/repository/maven-public/"
    }

    maven {
        url "https://maven.shedaniel.me/"
    }

    maven {
        name = 'BlameJared Maven (CrT / Bookshelf)'
        url = 'https://maven.blamejared.com'
    }

    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }

    maven {
        name = "Ladysnake Libs"
        url = 'https://maven.ladysnake.org/releases'
    }

    maven {
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    }

    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${mapping_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":common")

    /Fabric Seasons/
    modImplementation "curse.maven:fabric-seasons-413523:${project.fabric_seasons_file_id}"

    /Fabric Seasons Extras/
    modCompileOnly "curse.maven:fabric-seasons-extras-839878:${project.fabric_seasons_extras_file_id}"

    /Xaero's Minimap/
    modCompileOnly "curse.maven:xaeros-minimap-263420:${project.xaeros_fabric_file_id}"
//    modImplementation "curse.maven:xaeros-minimap-263420:${project.xaeros_fabric_file_id}"

    /Xaero's Minimap Fair Play/
//    modCompileOnly "curse.maven:xaeros-minimap-fair-play-edition-263466:${project.xaeros_fairplay_fabric_file_id}"

    /FTB Chunks/
    modCompileOnly "curse.maven:ftb-library-fabric-438495:${project.ftb_lib_fabric_file_id}"
    modCompileOnly "curse.maven:architectury-api-419699:${project.architectury_fabric_file_id}"
    modCompileOnly "curse.maven:ftb-teams-fabric-438497:${ftb_teams_fabric_file_id}"
    modCompileOnly "curse.maven:ftb-chunks-fabric-472657:${ftb_chunks_fabric_file_id}"

    /Trinkets/
    modCompileOnly "dev.emi:trinkets:${project.trinkets_file_id}"

    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    implementation("com.electronwill.night-config:core:3.6.3")
    implementation("com.electronwill.night-config:toml:3.6.3")

    modImplementation "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${forgeconfigapiport_file_id}"
//source: https://github.com/Fuzss/forgeconfigapiport-fabric

    /JourneyMap/
    modCompileOnlyApi group: 'info.journeymap', name: 'journeymap-api', version: project.journeymap_api_version_fabric, changing: true
    modCompileOnly "curse.maven:journeymap-${project.jm_project_id}:${project.journeymap_fabric_file_id}"

    /Map Atlases/
    modCompileOnly "curse.maven:map-atlases-436298:${project.map_atlases_fabric_file_id}"
    modCompileOnly "dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.2.1"
    modCompileOnly "dev.onyxstudios.cardinal-components-api:cardinal-components-item:5.2.1"
    modCompileOnly "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.2.1"
    modCompileOnly("curse.maven:selene-499980:5008352")
    include(compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.2.1-beta.2")))
    modCompileOnly "curse.maven:immediatelyfast-686911:4937544"
}

loom {
    if (project(":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
    mixin {
        defaultRefmapName = "seasonhud.refmap.json"
    }
}

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId base.archivesName.get()
            version project.version
            artifact jar
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}

String changelogText = projectDir.toPath().getParent().resolve("CHANGELOG.md").getText('UTF-8')

modrinth {
    int firstHeading = changelogText.indexOf("## [")
    int nextHeading = changelogText.indexOf("## [", firstHeading + 1)
    String recentChangelogText = changelogText.substring(firstHeading, nextHeading)

    debugMode = false
    token = System.getenv("MODRINTH_TOKEN")
    projectId = modrinth_fabric_id
    versionNumber = minecraft_version + "-" + version
    versionName = base.archivesName.get() + "-" + version
    versionType = "release"
    uploadFile = remapJar

    List<String> mcVersions = modrinth_gameVersions.split(",")
    gameVersions = mcVersions
    loaders = ["fabric"]

    changelog = recentChangelogText

    dependencies {
        required.project "fabric-seasons"
        optional.project "fabric-seasons-extras"
        required.project "forge-config-api-port"
        optional.project "journeymap"
        optional.project "trinkets"
        optional.project "xaeros-minimap"
        optional.project "xaeros-minimap-fair"
        optional.project "map-atlases"
    }
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    int firstHeading = changelogText.indexOf("## [")
    int nextHeading = changelogText.indexOf("## [", firstHeading + 1)
    String recentChangelogText = changelogText.substring(firstHeading, nextHeading)

    debugMode = false
    disableVersionDetection()
    apiToken = System.getenv("CURSEFORGE_TOKEN")

    def mainFile = upload(curseforge_fabric_id, file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))
    mainFile.changelogType = "markdown"
    mainFile.changelog = recentChangelogText
    mainFile.releaseType = "release"

    List<String> mcVersions = curseforge_gameVersions.split(",")
    mainFile.gameVersions = mcVersions
    mainFile.addGameVersion("Fabric")
    mainFile.addGameVersion("Java 17")

    mainFile.addRequirement("fabric-seasons")
    mainFile.addRequirement("forge-config-api-port-fabric")
    mainFile.addOptional("fabric-seasons-extras")
    mainFile.addOptional("ftb-chunks-fabric")
    mainFile.addOptional("journeymap")
    mainFile.addOptional("trinkets")
    mainFile.addOptional("xaeros-minimap")
    mainFile.addOptional("xaeros-minimap-fair-play-edition")
    mainFile.addOptional("map-atlases")
}