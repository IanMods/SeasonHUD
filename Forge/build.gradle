buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }

        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'


version = mod_version
group = mod_group

archivesBaseName = mod_id + "-forge-" + minecraft_version


minecraft {
    mappings channel: mapping_channel, version: mapping_version
    
    if (project.hasProperty('forge_ats_enabled') && project.findProperty('forge_ats_enabled').toBoolean()) {
        // This location is hardcoded in Forge and can not be changed.
        // https://github.com/MinecraftForge/MinecraftForge/blob/be1698bb1554f9c8fa2f58e32b9ab70bc4385e60/fmlloader/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModFile.java#L123
        accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
        project.logger.debug('Forge Access Transformers are enabled for this project.')
    }

    runs {
        client {
            workingDirectory project.file('run')

            ideaModule "${rootProject.name}.${project.name}.main"

            taskName 'Client'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modClientRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            ideaModule "${rootProject.name}.${project.name}.main"

            taskName 'Server'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modServerRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            ideaModule "${rootProject.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            taskName 'Data'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modDataRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "seasonhud.refmap.json"

    config "seasonhud.mixins.json"
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly project(":Common")

    /Serene Seasons/
    implementation "curse.maven:serene-seasons-291874:4577599"
    implementation "curse.maven:serene-seasons-291874:4577600"
//    compileOnly "curse.maven:serene-seasons-291874:4577601"

    /Curios/
//    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.4-5.1.5.3")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.4-5.1.5.3:api")

    /Xaero's Minimap/
    compileOnly fg.deobf("curse.maven:xaeros-minimap-263420:4658320")
//    implementation fg.deobf("curse.maven:xaeros-minimap-263420:4658320")

    /Xaero's Minimap Fair Play/
    compileOnly fg.deobf("curse.maven:xaeros-minimap-fair-play-edition-263466:4503441")
//    implementation fg.deobf("curse.maven:xaeros-minimap-fair-play-edition-263466:4503441")

    /Open Parties and Claims/
    compileOnly fg.deobf("curse.maven:open-parties-and-claims-636608:4658567")
//    implementation fg.deobf("curse.maven:open-parties-and-claims-636608:4658567")

    /FTB Chunks/
    compileOnly fg.deobf("curse.maven:ftb-library-forge-404465:4541987")
    compileOnly fg.deobf("curse.maven:architectury-api-419699:4555749")
    compileOnly fg.deobf("curse.maven:ftb-teams-forge-404468:4611938")
    compileOnly fg.deobf("curse.maven:ftb-chunks-forge-314906:4584683")

//    implementation fg.deobf("curse.maven:ftb-library-forge-404465:4541987")
//    implementation fg.deobf("curse.maven:architectury-api-419699:4555749")
//    implementation fg.deobf("curse.maven:ftb-teams-forge-404468:4611938")
//    implementation fg.deobf("curse.maven:ftb-chunks-forge-314906:4584683")

    /JourneyMap/
    compileOnly fg.deobf("curse.maven:journeymap-32274:4532920")
//    implementation fg.deobf("curse.maven:journeymap-32274:4532920")

}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

processResources {
    from project(":Common").sourceSets.main.resources
}


jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
