plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle'
    id 'org.spongepowered.mixin'
    id 'net.darkhax.curseforgegradle' version '1.1.16'
    id "com.modrinth.minotaur" version "2.+"
}

version = mod_version
group = mod_group

base {
    archivesName = mod_id + "-forge-" + minecraft_version
}

mixin {
    add(sourceSets.main, "${mod_id}.refmap.json")

    config("${mod_id}.mixins.json")
    config("${mod_id}.forge.mixins.json")
}


minecraft {
    mappings channel: mapping_channel, version: mapping_version

    if (file('src/main/resources/META-INF/accesstransformer.cfg').exists()) {
        accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    }

    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modClientRun {
                    source sourceSets.main
                    source project(":common").sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modServerRun {
                    source sourceSets.main
                    source project(":common").sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            taskName 'Data'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modDataRun {
                    source sourceSets.main
                    source project(":common").sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly project(":common")
    annotationProcessor("org.spongepowered:mixin:0.8.5-SNAPSHOT:processor")

    /Serene Seasons/
    implementation "curse.maven:serene-seasons-291874:4611121"
    implementation "curse.maven:serene-seasons-291874:4611122"
//    compileOnly "curse.maven:serene-seasons-291874:4611123" //api

    /Curios/
//    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.2.0-beta.3+1.20.1:api")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.2.0-beta.3+1.20.1:api")

    /Xaero's Minimap/
    compileOnly fg.deobf("curse.maven:xaeros-minimap-263420:4593190")
//    implementation fg.deobf("curse.maven:xaeros-minimap-263420:4593190")

    /Xaero's Minimap Fair Play/
    compileOnly fg.deobf("curse.maven:xaeros-minimap-fair-play-edition-263466:4586338")
//    implementation fg.deobf("curse.maven:xaeros-minimap-fair-play-edition-263466:4586338")

    /Open Parties and Claims/
    compileOnly fg.deobf("curse.maven:open-parties-and-claims-636608:4603080")
//    implementation fg.deobf("curse.maven:open-parties-and-claims-636608:4603080")

    /FTB Chunks/
    compileOnly fg.deobf("curse.maven:ftb-library-forge-404465:4596511") //FTB Library
    compileOnly fg.deobf("curse.maven:architectury-api-419699:4663010") //Architectury
    compileOnly fg.deobf("curse.maven:ftb-teams-forge-404468:4623116") //FTB Teams
    compileOnly fg.deobf("curse.maven:ftb-chunks-forge-314906:4654814") //FTB Chunks

//    implementation fg.deobf("curse.maven:ftb-library-forge-404465:4596511") //FTB Library
//    implementation fg.deobf("curse.maven:architectury-api-419699:4663010") //Architectury
//    implementation fg.deobf("curse.maven:ftb-teams-forge-404468:4623116") //FTB Teams
//    implementation fg.deobf("curse.maven:ftb-chunks-forge-314906:4654814") //FTB Chunks

    /JourneyMap/
    compileOnly fg.deobf("curse.maven:journeymap-32274:4580627")
//    implementation fg.deobf("curse.maven:journeymap-32274:4580627")

}

tasks.withType(JavaCompile) {
    source(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources
}


jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId base.archivesName.get()
            version project.version
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}

modrinth {

}
